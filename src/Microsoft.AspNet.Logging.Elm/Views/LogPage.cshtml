@using System
@using System.Globalization
@using System.Linq
@using Microsoft.AspNet.Logging.Elm.Views
@using Microsoft.Framework.Logging

@functions
{
    public LogPage(LogPageModel model)
    {
        Model = model;
    }

    public LogPageModel Model { get; set; }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>ELM</title>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <style>
        <%$ include: LogPage.css %>
    </style>
</head>
<body>
    <h1>ELM</h1>
    <form method="get">
        <select name="level">
            @foreach (var severity in Enum.GetValues(typeof(TraceType)))
            {
                var s = (int)severity;
                if ((int)Model.Options.MinLevel == s)
                {
                    <option value="@s" selected="selected">@severity</option>
                }
                else
                {
                    <option value="@s">@severity</option>
                }
            }
        </select>
        <input type="text" name="name" value="@Model.Options.NamePrefix"/>
        <input type="submit" value="filter"/>
    </form>

    <table id="requestTable">  
        <thead id="requestHeader">
            <tr>
                <th class="path">Path</th>
                <th class="host">Host</th>
                <th class="statusCode">Status Code</th>
                <th class="logs">Logs</th>
            </tr>
        </thead>
        <colgroup>
            <col />
            <col />
            <col />
            <col />
        </colgroup>
        @foreach (var logs in Model.Logs.GroupBy(g => g.Context))
        {
            <tbody>
                <tr class="requestRow">
                    @{
                        var requestPath = Model.Options.Path.Value + "/" + logs.Key.RequestID;
                    }
                    <td><a href="@requestPath" title="@logs.Key.Path">@logs.Key.Path</a></td>
                    <td>@logs.Key.Host</td>
                    <td>@logs.Key.StatusCode</td>
                    <td class="logTd">
                        <table class="logTable">
                            <thead class="logHeader">
                                <tr>
                                    <th class="date">Date</th>
                                    <th class="time">Time</th>
                                    <th class="name">Name</th>
                                    <th class="severity">Severity</th>
                                    <th class="state">State</th>
                                    <th class="error">Error</th>
                                </tr>
                            </thead>
                            <tbody>
                                @* logs are chronologically ordered within each request *@
                                @foreach (var log in logs.Reverse())
                                {
                                    var scopes = "";
                                    if (log.Scopes != null)
                                    {
                                        // classes cannot begin with a number, prepend an underscore
                                        scopes = string.Join(" _", log.Scopes);
                                    }
                                    var logState = string.Format("{0} _{1}", "logState", scopes);
                                    <tr class="logRow">
                                        <td>@string.Format("{0:MM/dd/yy}", log.Time)</td>
                                        <td>@string.Format("{0:H:mm:ss}", log.Time)</td>
                                        <td title="@log.Name">@log.Name</td>
                                        <td class="@log.Severity">@log.Severity</td>
                                        <td title="@log.State" class="@logState">@log.State</td>
                                        <td title="@log.Exception">@log.Exception</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            </tbody>
        }
    </table>
    <script type="text/javascript">
        jQuery(document).ready(function () {
            $(".logState").hover(
                function () {
                    var logs = $(".logState");
                    var classes = this.classList;
                    classes.remove("logState");
                    for (i = 0; i < logs.length; i++) {
                        var shouldHighlight = true;
                        for (j = 0; j < classes.length; j++) {
                            if (!logs[i].classList.contains(classes[j])) {
                                shouldHighlight = false;
                                break;
                            }
                        }
                        if (!shouldHighlight) {
                            logs[i].style.color = "gray";
                            logs[i].parentNode.style.opacity = 0.6;
                        }
                    }
                    classes.add("logState");
                },
                function () {
                    $(".logState").css("color", "black");
                    $(".logState").parent().css("opacity", 1.0);
                }
            );
        });
    </script>
</body>
</html>